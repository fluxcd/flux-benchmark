name: benchmark

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  bench:
    strategy:
      matrix:
        RESOURCES: [100, 500, 1000]
        CRDS: [50, 250, 500]
    runs-on:
      group: "Default Larger Runners"
      labels: ubuntu-latest-16-cores
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install tools
        run: make tools
      - name: Create cluster
        run: make up
        env:
          KIND_NODE_IMAGE: ghcr.io/fluxcd/kindest/node:v1.30.0-amd64
      - name: Push modules
        run: make timoni-push
      - name: Install Flux
        run: make flux-up
        env:
          CRD_COUNT: ${{ matrix.CRDS }}
      - name: Install metrics-server
        run: timoni bundle apply -f timoni/bundles/flux-metrics.cue
      - name: Run kustomize install benchmark
        run: |
          KS=${{ matrix.RESOURCES }} timoni bundle apply -f timoni/bundles/flux-benchmark.cue --runtime-from-env --timeout=30m
          kubectl -n flux-system top pods
      - name: Run kustomize upgrade benchmark
        run: |
          KS=${{ matrix.RESOURCES }} MCPU=2 timoni bundle apply -f timoni/bundles/flux-benchmark.cue --runtime-from-env --timeout=30m
          kubectl -n flux-system top pods
      - name: Run helm install benchmark
        run: |
          HR=${{ matrix.RESOURCES }} timoni bundle apply -f timoni/bundles/flux-benchmark.cue --runtime-from-env --timeout=30m
          kubectl -n flux-system top pods
      - name: Run helm upgrade benchmark
        run: |
          HR=${{ matrix.RESOURCES }} MCPU=2 timoni bundle apply -f timoni/bundles/flux-benchmark.cue --runtime-from-env --timeout=30m
          kubectl -n flux-system top pods
      - name: Debug failure
        if: failure()
        run: |
          kubectl -n flux-system get pods
          flux get all --all-namespaces
